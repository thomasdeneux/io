function adq2vu(chan,cond,band,xlm,overlay,sav,files)
%function adq2vu(chan,cond,band,xlm,overlay,sav,files)
% for unit recordings
    % adq2vu([3 5],3,[500 5000],[0 2500], 1)
    % input : channels,conditions, Filter band band (hz), x-range(# of samples)

% for EEG :    adq2vu(2,[2 3],[1 400], [0 3000])
%   analog channel EEG on 2 HB on 1 MU on 3
%   Stim conditions 2 and 3 are the stimulus conditions 1 and 4 are no stim conditions(starting from 1 (not from 0)
%   filter 
%   data point
%   a fifth parameter may be added 1 for overlay . Nothing for seperate
% traces
%
% To overlay channels one on top of the other e.g.:  adq2vu(chan,cond,band,xlm,1)
%
% To print ot a pdf file adq2vu(chan,cond,band,xlm,overlay,1) e.g. :
%
%       adq2vu(2,[2 3 4],[],[0 300],0,1)

disp('warning: original code has been modified on line 132; replaced c by c-1 and n by n-1')

warning off all
if sum(chan==3)
   chan(chan ==3) = '';
   chan = [3 row(chan)];
end
if nargin < 4
    xlm = []; 
end
if nargin < 3
    band = [];
end
if nargin < 5
    overlay = 0;
end
if nargin < 6
    sav = 0;
end
if exist('files','var')
    pth = [pwd '\'];
else
    [files,pth] = uigetfile('*adaq.mat','Choose ADAQ files to view','multiselect','on');
end
if ~iscell(files)
    files = {files};
end
data = cell([length(files) length(cond) length(chan)]);
for n = 1 : length(files)
    [data(n,:,:),x] = a2v([pth files{n}],chan,cond,band);
end
h = figure;
set(h,'units','normalized')
hold on
fun = @tags2toggle;
set(h,'WindowButtonDownFcn',{fun,1})
set(h,'WindowButtonUpFcn',{fun,0})
if overlay
    plot(col(x),cat(2,data{:})')
    set(gcf,'numbertitle','off')
    axis tight
    if ~isempty(xlm)
        xlim(xlm)
    end
    set(gcf,'color','w')
    set(gca,'ycolor','w')
%     set(gcf,'units','normalized','position',[.3 .05 .3 .8])
    legend(pwd,'location','northOutside')
    xlabel('time (msec.)')
%     set(gca,'units','normalized','position',[.13 .05 .775 .9]),shg
else
    cols = 'krgbcm';
    for fn = 1:length(files)
        for c = 1 : length(cond)
            for ch = 1 : length(chan)
                y = data{fn,c,ch};
                if ch==1
                    if fn>1 || c > 1
                        y = y - max(y) + sclf;
                    end
                    rng = max(y)-min(y);
                    sclf = min(y)-.15*rng;
                    mn = min(y);
                    if ~isempty(xlm)
                        strt = xlm(1);
                    else
                        strt = x(1);
                    end
                    hh = text(strt,mn+.1*rng,[strrep(files{fn},'_adaq.mat','') 'C' num2str(cond(c))]);
                    set(hh,'color',rgb('NavyBlue'))
                else
                    y = y - min(y);
                    y = y./max(y)*rng;
                    y = y+mn;
                end
                plot(col(x),col(y),cols(ch))
            end
        end
    end
    
    set(gcf,'numbertitle','off')
    axis tight
    if ~isempty(xlm)
        xlim(xlm)
    end
    set(gcf,'color','w')
    set(gca,'ycolor','w')
    set(gcf,'units','normalized','position',[.3 .05 .3 .8])
    legend(pwd,'location','northOutside')
    xlabel('time (msec.)')
    set(gca,'units','normalized','position',[.13 .05 .775 .9]),shg
end

if sav
    exprs = sort(cellfun(@(x) str2num(strrep(x(4:end),'_adaq.mat','')),files));
    exprs = conds2str(exprs);
    outname = [files{1}(1:3) exprs 'C' num2str(cond) 'Chan' num2str(row(chan))];
    print(gcf,'-dpdf',[outname '.pdf'])
end

function [data,x] = a2v(file,chan,cond,band)

load(file)
data = cell(1,length(cond),length(chan));
x = (1:nSamples-pretrig)/sampling_rate*1000;
ccounter = 0;
for c = row(cond)
    ccounter = ccounter + 1;
    ncounter = 0;
    for n = row(chan)
        ncounter = ncounter + 1;
        y = eval(['Cond' num2str(c-1) 'Trial0Chan' num2str(n-1)]);
        if ~isempty(band) && (n == 3 || n == 2)
            y = hp(y,band,1/sampling_rate);
        end        
        data(1,ccounter,ncounter) = {y(pretrig+1:end)};
    end
end

function condsstr = conds2str(conds)

conds = sort(row(conds));
condsstr = [];
bp = find(diff(conds)>1);
if isempty(bp)
    condsstr = [num2str(min(conds)) 'to' num2str(max(conds))];
else
    starts = [1 bp+1];
    ends = [bp max(conds)];
    for n = 1 : length(starts)
        if ends(n) > starts(n)
            condsstr = [condsstr num2str(starts(n)) 'to' num2str(ends(n)) '_'];
        else
            condsstr = [condsstr num2str(starts(n)) '_'];
        end
    end
    condsstr(end) = '';
end
function x = row(x)

x = x(:)';

function x = col(x)

x = x(:);

function opt = hp(opt,band,TR)
%BUTTERFILT Butterwoth time series filtering
%   timeSeries = bfilt(timeSeries,order,cutfreq,sf,ftype)
% 
%   timeSeries = a column timeSeries or a matrix.
%
%   sf = sampling frequency in Hz
%
%   ftype = 's' for band stop
%           'h' high pass
%           'l' low pass
%           'b' band pass
%
%   ftype can be appended with 's','r','z' (e.g. 'hz') to pad vectors
%   either by replicating the edges symmetrically, with the last value and
%   with 0
%
%   order = the order of the filter (1~Gaussian inf~ideal) 
% 
if ~exist('TR','var')
    TR = 0.005;
end
nyquist = 1/TR/2;
if max(band)>nyquist
    errordlg('Specified frequency exceeds nyquist')
    return
end
if min(band) < 0
    errordlg('Specified frequency must be positive')
    return
end
if ~isempty(band)
    if length(band) == 2
        if sum(band>0) == 2
            opt = butterfilt(opt,1,[band(1) band(2)],1/TR,'bs')';
        elseif band(1)
            opt = butterfilt(opt,1,band(1),1/TR,'hs')';
        else
            opt = butterfilt(opt,1,band(2),1/TR,'ls')';
        end
    elseif band>1
        opt = butterfilt(opt,1,band,1/TR,'ls')';
    else
        opt = butterfilt(opt,1,band,1/TR,'hs')';
    end
end

function timeSeries = butterfilt(timeSeries,fpower,cutfreq,sf,ftype)
%BUTTERFILT Butterwoth time series filtering
%   timeSeries = bfilt(timeSeries,order,cutfreq,sf,ftype)
% 
%   timeSeries = a column timeSeries or a matrix.
%
%   sf = sampling frequency in Hz
%
%   ftype = 's' for band stop
%           'h' high pass
%           'l' low pass
%           'b' band pass
%
%   ftype can be appended with 's','r','z' (e.g. 'hz') to pad vectors
%   either by replicating the edges symmetrically, with the last value and
%   with 0
%
%   order = the order of the filter (1~Gaussian inf~ideal) 
% 
if length(ftype) == 2 
    padopt = ftype(2);
    ftype = ftype(1);
    l = size(timeSeries,1);
    switch lower(padopt)
        case 's'
            timeSeries = padarray(timeSeries,floor(l/4),'symmetric');
        case 'r'
            timeSeries = padarray(timeSeries,floor(l/4),'replicate');
        case 'z'
            timeSeries = padarray(timeSeries,floor(l/4));
    end 
end
if nargin < 5, ftype = 'l'; end
freqN = .5*sf;
if strcmp('h',ftype)
    [b,a] = butter(fpower,cutfreq/freqN,'high');
elseif strcmp('l',ftype)
    [b,a] = butter(fpower,cutfreq/freqN);
else
    [b,a] = butter(fpower,cutfreq/freqN,'stop');
end

if strcmp('b',ftype)
    timeSeries = timeSeries - filtfilt(b,a,timeSeries);
else
    timeSeries = filtfilt(b,a,timeSeries);
end

if exist('padopt','var')
    timeSeries = timeSeries(floor(l/4)+1:floor(l/4)+l,:);
end

function tags2toggle(src,eventdatat,arg)
%subroutine for plotnirs ver 2
global texth
handles = get(gcf,'userdata');
button = get(gcf, 'SelectionType');
if arg
    if strcmp(button,'extend')
        set(handles{1,1},'visible','on')
        set(get(gca,'userdata'),'vis','on')
    elseif strcmp(button,'open')|| strcmp(button,'normal')
        pp = get(gcf,'pointer');
        switch lower(pp)
            case {'arrow'}
                set(gcf,'pointer','fullcross')
                texth = text(0,0,'','units','normalized');
                set(gcf,'WindowButtonMotionFcn',{@xy2mark,texth})
            case {'fullcross','fullcrosshair'}
                set(gcf,'pointer','arrow')
                set(gcf,'vis','on')
                set(gcf,'WindowButtonMotionFcn',[])
                delete(texth)
        end
    else
        if ~isempty(handles{2,1})
            pp = get(handles{2,1},'vis');
            if ~ischar(pp)
                pp = pp{1,1};
            end
            switch lower(pp)
                case {'on'}
                    set(handles{2,1},'vis','off')
                    legend('off')
                case {'off'}
                    set(handles{2,1},'vis','on')
                    legend(handles{2,1},handles{3,1})
            end
        elseif ~isempty(handles{5,1})
            pp = get(handles{5,1},'vis');
            if ~ischar(pp)
                pp = pp{1,1};
            end
            switch lower(pp)
                case {'on'}
                    set(handles{5,1},'vis','off')
                    uistack(handles{5,1},'bottom')
                case {'off'}
                    set(handles{5,1},'vis','on')   
            end
        end
    end
else
    if strcmp(button,'extend')
        set(handles{1,1},'visible','off')
        set(get(gca,'userdata'),'vis','off')
    else
        return
    end
end

function  xy2mark(src,event,h)
%XY2MARK is a figure callon function that is to be associated with the
%   figure 'WindowButtonMotionFcn' property, e.g.: h = text(0,0,'') and
%   set(gcf,'WindowButtonMotionFcn',{@xy2mark,h},'units','normalized')
coords = get(gcf,'currentpoint');
x = coords(1);
y = coords(2);
coords2 = get(gca,'currentpoint');
x2 = coords2(1,1);
y2 = coords2(1,2);
lims = get(gca,'position');
[xsign,ysign,xplacement,yplacement] = place(x,y,lims);
xoffset = x + lims(3)*xsign/20 - lims(1);
yoffset = y + lims(4)*ysign/20 - lims(2);
if (x<lims(1)) || (x>lims(1)+lims(3)) || (y<lims(2)) || (y>lims(2)+lims(4)) 
    set(h,'string','')
else
set(h,'position',[xoffset/lims(3),yoffset/lims(4),0],'string',strvcat(['x: ' do(x2)],['y: ' do(y2)])...
    ,'HorizontalAlignment',xplacement,'VerticalAlignment',yplacement ...
    ,'BackgroundColor',rgb('ivory'),'margin',3,'edgecolor','k'...
    ,'fontsize',8,'fontname','garamond');drawnow
end

function x = do(x)

x = num2str(x);
point = findstr('.',x);
if isempty(point)
    return
else
    l = length(x);
    if l-point >3
        x = x(1:point+3);
    end
end

function [xsign,ysign,xplacement,yplacement] = place(x,y,lims)

ym = .5*lims(4)+lims(2);
xm = .5*lims(3)+lims(1);
if x < xm
    xsign = -1;
    xplacement = 'right';
else
    xsign = 1;
    xplacement = 'left';
end
if y > ym
    ysign = 1;
    yplacement = 'bottom';
else
    ysign = -1;
    yplacement = 'top';
end

function [color,names] = rgb(varargin)
%COLOR2GET returns RGB triplets matching input color names
if isempty(varargin)
    return
elseif iscell(varargin{1}) %input format for SET 'color' functionality
    varargin = varargin{1};
end
names = zeros(1,nargin);
%First finds exact matches to color names
[colors,colorNames] = getColorchart(); 
names0 = cellfun(@(x) strmatch(lower(x),lower(colorNames),'exact'),varargin,'UniformOutput',false);
partialFits = cellfun(@isempty,names0);
names(~partialFits) = [names0{:}];
%If necessary finds possible matches to partial names
if sum(partialFits)>0
    varargin(~partialFits) = '';
    l = length(varargin);
    n = length(colors);
    names0 = cellfun(@(x) strfind(lower(colorNames),lower(x)),varargin,'UniformOutput',false);
    [row,col] = find(~cellfun(@isempty,reshape([names0{:}],n,l)));
    [dumi,names0] = unique(col,'first');
    names = [names row(names0)'];
end
missed = find(names==0);
if ~isempty(missed)
    names(missed) = '';
    beep
    fprintf('\n\n')
    if length(missed) > 1
       disp(['Entries ' num2str(missed(1:end-1)) ' & ' num2str(missed(end)) ' were misspelt or do not exist in colorchart']) 
    else
       disp(['Entry '  num2str(missed(end)) ' was misspelt or does not exist in colorchart'])  
    end
    fprintf('\n\n')
end
if length(names)>1
    color = colors(names,:);
else
    color = colors{names,:};
end
names = colorNames(names);




function [colors,colorNames] = getColorchart()
colors = mat2cell([0.3294	0.3294	0.3294;
0.7529	0.7529	0.7529;
0.7451	0.7451	0.7451;
0.8275	0.8275	0.8275;
0.4667	0.5333	0.6;
0.4392	0.502	0.5647;
0.7765	0.8863	1;
0.7255	0.8275	0.9333;
0.6235	0.7137	0.8039;
0.4235	0.4824	0.5451;
0	0	0;
0	0	0;
0.0118	0.0118	0.0118;
0.0196	0.0196	0.0196;
0.0314	0.0314	0.0314;
0.0392	0.0392	0.0392;
0.051	0.051	0.051;
0.0588	0.0588	0.0588;
0.0706	0.0706	0.0706;
0.0784	0.0784	0.0784;
0.0902	0.0902	0.0902;
0.102	0.102	0.102;
0.1098	0.1098	0.1098;
0.1216	0.1216	0.1216;
0.1294	0.1294	0.1294;
0.1412	0.1412	0.1412;
0.149	0.149	0.149;
0.1608	0.1608	0.1608;
0.1686	0.1686	0.1686;
0.1804	0.1804	0.1804;
0.1882	0.1882	0.1882;
0.2	0.2	0.2;
0.2118	0.2118	0.2118;
0.2196	0.2196	0.2196;
0.2314	0.2314	0.2314;
0.2392	0.2392	0.2392;
0.251	0.251	0.251;
0.2588	0.2588	0.2588;
0.2706	0.2706	0.2706;
0.2784	0.2784	0.2784;
0.2902	0.2902	0.2902;
0.302	0.302	0.302;
0.3098	0.3098	0.3098;
0.3216	0.3216	0.3216;
0.3294	0.3294	0.3294;
0.3412	0.3412	0.3412;
0.349	0.349	0.349;
0.3608	0.3608	0.3608;
0.3686	0.3686	0.3686;
0.3804	0.3804	0.3804;
0.3882	0.3882	0.3882;
0.4	0.4	0.4;
0.4118	0.4118	0.4118;
0.4196	0.4196	0.4196;
0.4314	0.4314	0.4314;
0.4392	0.4392	0.4392;
0.451	0.451	0.451;
0.4588	0.4588	0.4588;
0.4706	0.4706	0.4706;
0.4784	0.4784	0.4784;
0.4902	0.4902	0.4902;
0.498	0.498	0.498;
0.5098	0.5098	0.5098;
0.5216	0.5216	0.5216;
0.5294	0.5294	0.5294;
0.5412	0.5412	0.5412;
0.549	0.549	0.549;
0.5608	0.5608	0.5608;
0.5686	0.5686	0.5686;
0.5804	0.5804	0.5804;
0.5882	0.5882	0.5882;
0.6	0.6	0.6;
0.6118	0.6118	0.6118;
0.6196	0.6196	0.6196;
0.6314	0.6314	0.6314;
0.6392	0.6392	0.6392;
0.651	0.651	0.651;
0.6588	0.6588	0.6588;
0.6706	0.6706	0.6706;
0.6784	0.6784	0.6784;
0.6902	0.6902	0.6902;
0.702	0.702	0.702;
0.7098	0.7098	0.7098;
0.7216	0.7216	0.7216;
0.7294	0.7294	0.7294;
0.7412	0.7412	0.7412;
0.749	0.749	0.749;
0.7608	0.7608	0.7608;
0.7686	0.7686	0.7686;
0.7804	0.7804	0.7804;
0.7882	0.7882	0.7882;
0.8	0.8	0.8;
0.8118	0.8118	0.8118;
0.8196	0.8196	0.8196;
0.8314	0.8314	0.8314;
0.8392	0.8392	0.8392;
0.851	0.851	0.851;
0.8588	0.8588	0.8588;
0.8706	0.8706	0.8706;
0.8784	0.8784	0.8784;
0.8902	0.8902	0.8902;
0.898	0.898	0.898;
0.9098	0.9098	0.9098;
0.9216	0.9216	0.9216;
0.9294	0.9294	0.9294;
0.9412	0.9412	0.9412;
0.949	0.949	0.949;
0.9608	0.9608	0.9608;
0.9686	0.9686	0.9686;
0.9804	0.9804	0.9804;
0.9882	0.9882	0.9882;
1	1	1;
0.1843	0.3098	0.3098;
0.3294	0.3294	0.3294;
0.8588	0.8588	0.4392;
0.8039	0.8039	0.8039;
0.3882	0.3373	0.5333;
0.9412	0.9725	1;
0.5412	0.1686	0.8863;
0.3725	0.6235	0.6235;
0.3725	0.6196	0.6275;
0.3725	0.6196	0.6275;
0.5961	0.9608	1;
0.5569	0.898	0.9333;
0.4784	0.7725	0.8039;
0.3255	0.5255	0.5451;
0.2588	0.2588	0.4353;
0.3922	0.5843	0.9294;
0.2824	0.2392	0.5451;
0	0.8078	0.8196;
0	0.749	1;
0	0.749	1;
0	0.698	0.9333;
0	0.6039	0.8039;
0	0.4078	0.5451;
0.1176	0.5647	1;
0.1176	0.5647	1;
0.1098	0.5255	0.9333;
0.0941	0.4549	0.8039;
0.0627	0.3059	0.5451;
0.6784	0.8471	0.902;
0.749	0.9373	1;
0.698	0.8745	0.9333;
0.6039	0.7529	0.8039;
0.4078	0.5137	0.5451;
0.8784	1	1;
0.8784	1	1;
0.8196	0.9333	0.9333;
0.7059	0.8039	0.8039;
0.4784	0.5451	0.5451;
0.5294	0.8078	0.9804;
0.6902	0.8863	1;
0.6431	0.8275	0.9333;
0.5529	0.7137	0.8039;
0.3765	0.4824	0.5451;
0.5176	0.4392	1;
0.6902	0.7686	0.8706;
0.7922	0.8824	1;
0.7373	0.8235	0.9333;
0.6353	0.7098	0.8039;
0.4314	0.4824	0.5451;
0.4392	0.8588	0.5765;
0	0	0.8039;
0.4824	0.4078	0.9333;
0.2824	0.8196	0.8;
0.098	0.098	0.4392;
0	0	0.502;
0.6863	0.9333	0.9333;
0.7333	1	1;
0.6824	0.9333	0.9333;
0.5882	0.8039	0.8039;
0.4	0.5451	0.5451;
0.6902	0.8784	0.902;
0.2549	0.4118	0.8824;
0.2824	0.4627	1;
0.2627	0.4314	0.9333;
0.2275	0.3725	0.8039;
0.1529	0.251	0.5451;
0	0.1333	0.4;
0.5294	0.8078	0.9216;
0.5294	0.8078	1;
0.4941	0.7529	0.9333;
0.4235	0.651	0.8039;
0.2902	0.4392	0.5451;
0.4157	0.3529	0.8039;
0.5137	0.4353	1;
0.4784	0.4039	0.9333;
0.4118	0.349	0.8039;
0.2784	0.2353	0.5451;
0.2745	0.5098	0.7059;
0.3882	0.7216	1;
0.3608	0.6745	0.9333;
0.3098	0.5804	0.8039;
0.2118	0.3922	0.5451;
0.498	1	0.8314;
0.498	1	0.8314;
0.4627	0.9333	0.7765;
0.4	0.8039	0.6667;
0.2706	0.5451	0.4549;
0.9412	1	1;
0.9412	1	1;
0.8784	0.9333	0.9333;
0.7569	0.8039	0.8039;
0.5137	0.5451	0.5451;
0	0	1;
0	0	1;
0	0	0.9333;
0	0	0.8039;
0	0	0.5451;
0	1	1;
0	1	1;
0	1	1;
0	0.9333	0.9333;
0	0.8039	0.8039;
0	0.5451	0.5451;
0	0	0.502;
0	0.502	0.502;
0.251	0.8784	0.8157;
0	0.9608	1;
0	0.898	0.9333;
0	0.7725	0.8039;
0	0.5255	0.5451;
0.1843	0.3098	0.3098;
0.5922	1	1;
0.5529	0.9333	0.9333;
0.4745	0.8039	0.8039;
0.3216	0.5451	0.5451;
0.1412	0.0941	0.5098;
0.4392	0.5765	0.8588;
0.8039	0.498	0.1961;
0.8039	0.498	0.1961;
0.498	0	1;
0.4392	0.8588	0.8588;
0.1843	0.1843	0.3098;
0.1373	0.1373	0.5569;
0.302	0.302	1;
0	0	0.6118;
0.349	0.349	0.6706;
0.1961	0.6	0.8;
0	0.498	1;
0.2196	0.6902	0.8706;
0.0118	0.7059	0.7843;
0.2549	0.3373	0.7725;
0.7373	0.5608	0.5608;
1	0.7569	0.7569;
0.9333	0.7059	0.7059;
0.8039	0.6078	0.6078;
0.5451	0.4118	0.4118;
0.5451	0.2706	0.0745;
0.9569	0.6431	0.3765;
0.9608	0.9608	0.8627;
0.6471	0.1647	0.1647;
0.651	0.1647	0.1647;
1	0.251	0.251;
0.9333	0.2314	0.2314;
0.8039	0.2	0.2;
0.5451	0.1373	0.1373;
0.3608	0.251	0.2;
0.8706	0.7216	0.5294;
1	0.8275	0.6078;
0.9333	0.7725	0.5686;
0.8039	0.6667	0.4902;
0.5451	0.451	0.3333;
0.3608	0.2	0.0902;
0.8235	0.4118	0.1176;
1	0.498	0.1412;
0.9333	0.4627	0.1294;
0.8039	0.4	0.1137;
0.5451	0.2706	0.0745;
0.8039	0.5216	0.2471;
0.8235	0.7059	0.549;
1	0.6471	0.3098;
0.9333	0.6039	0.2863;
0.8039	0.5216	0.2471;
0.5451	0.3529	0.1686;
0.5922	0.4118	0.3098;
0.5216	0.3686	0.2588;
0.5216	0.3882	0.3882;
0.651	0.502	0.3922;
0.9216	0.7804	0.6196;
0.4196	0.2588	0.149;
0.5569	0.4196	0.1373;
0.8588	0.5765	0.4392;
0.3608	0.251	0.2;
0.1843	0.3098	0.1843;
0	0.3922	0;
0.2902	0.4627	0.4314;
0.7412	0.7176	0.4196;
0.3333	0.4196	0.1843;
0.7922	1	0.4392;
0.7373	0.9333	0.4078;
0.6353	0.8039	0.3529;
0.4314	0.5451	0.2392;
0.502	0.502	0;
0.5608	0.7373	0.5608;
0.7569	1	0.7569;
0.7059	0.9333	0.7059;
0.6078	0.8039	0.6078;
0.4118	0.5451	0.4118;
0.1333	0.5451	0.1333;
0.6784	1	0.1843;
0.4863	0.9882	0;
0.1255	0.698	0.6667;
0.1961	0.8039	0.1961;
0.2353	0.702	0.4431;
0	0.9804	0.6039;
0.9608	1	0.9804;
0.4196	0.5569	0.1373;
0.7529	1	0.2431;
0.702	0.9333	0.2275;
0.6039	0.8039	0.1961;
0.4118	0.5451	0.1333;
0.5961	0.9843	0.5961;
0.6039	1	0.6039;
0.5647	0.9333	0.5647;
0.4863	0.8039	0.4863;
0.3294	0.5451	0.3294;
0.1804	0.5451	0.3412;
0.3294	1	0.6235;
0.3059	0.9333	0.5804;
0.2627	0.8039	0.502;
0	1	0.498;
0	1	0.498;
0	0.9333	0.4627;
0	0.8039	0.4;
0	0.5451	0.2706;
0.6039	0.8039	0.1961;
0.498	1	0;
0.498	1	0;
0.4627	0.9333	0;
0.4	0.8039	0;
0.2706	0.5451	0;
0	1	0;
0	0.502	0;
0	1	0;
0	1	0;
0	0.9333	0;
0	0.8039	0;
0	0.5451	0;
0.9412	0.902	0.549;
1	0.9647	0.5608;
0.9333	0.902	0.5216;
0.8039	0.7765	0.451;
0.5451	0.5255	0.3059;
0.3098	0.3098	0.1843;
0.8196	0.5725	0.4588;
0.5569	0.1373	0.1373;
0.1373	0.5569	0.1373;
0.8196	0.5725	0.4588;
0.8588	0.8588	0.4392;
0.2588	0.4353	0.2588;
0.498	1	0;
0.5608	0.7373	0.5608;
0.1373	0.5569	0.4078;
0	1	0.498;
0.0353	0.9765	0.0667;
0.0078	0.6157	0.4549;
1	0.549	0;
1	0.498	0;
0.9333	0.4627	0;
0.8039	0.4	0;
0.5451	0.2706	0;
0.9137	0.5882	0.4784;
0.9412	0.502	0.502;
1	0.6275	0.4784;
1	0.6275	0.4784;
0.9333	0.5843	0.4471;
0.8039	0.5059	0.3843;
0.5451	0.3412	0.2588;
1	0.8549	0.7255;
1	0.8549	0.7255;
0.9333	0.7961	0.6784;
0.8039	0.6863	0.5843;
0.5451	0.4667	0.3961;
1	0.8941	0.7686;
1	0.8941	0.7686;
0.9333	0.8353	0.7176;
0.8039	0.7176	0.6196;
0.5451	0.4902	0.4196;
1	0.498	0;
1	0.498	0.3137;
1	0.4471	0.3373;
0.9333	0.4157	0.3137;
0.8039	0.3569	0.2706;
0.5451	0.2431	0.1843;
0.9412	1	0.9412;
0.9412	1	0.9412;
0.8784	0.9333	0.8784;
0.7569	0.8039	0.7569;
0.5137	0.5451	0.5137;
1	0.6471	0;
1	0.6471	0;
0.9333	0.6039	0;
0.8039	0.5216	0;
0.5451	0.3529	0;
0.9804	0.502	0.4471;
1	0.549	0.4118;
0.9333	0.5098	0.3843;
0.8039	0.4392	0.3294;
0.5451	0.298	0.2235;
0.6275	0.3216	0.1765;
1	0.5098	0.2784;
0.9333	0.4745	0.2588;
0.8039	0.4078	0.2235;
0.5451	0.2784	0.149;
0.5569	0.1373	0.1373;
1	0.498	0;
1	0.1412	0;
1	0.0784	0.5765;
1	0.0784	0.5765;
0.9333	0.0706	0.5373;
0.8039	0.0627	0.4627;
0.5451	0.0392	0.3137;
1	0.4118	0.7059;
1	0.4314	0.7059;
0.9333	0.4157	0.6549;
0.8039	0.3765	0.5647;
0.5451	0.2275	0.3843;
0.8039	0.3608	0.3608;
1	0.4157	0.4157;
0.9333	0.3882	0.3882;
0.8039	0.3333	0.3333;
0.5451	0.2275	0.2275;
1	0.7137	0.7569;
1	0.6824	0.7255;
0.9333	0.6353	0.6784;
0.8039	0.549	0.5843;
0.5451	0.3725	0.3961;
0.7804	0.0824	0.5216;
1	0.8941	0.8824;
1	0.8941	0.8824;
0.9333	0.8353	0.8235;
0.8039	0.7176	0.7098;
0.5451	0.4902	0.4824;
1	0.2706	0;
1	0.2706	0;
0.9333	0.251	0;
0.8039	0.2157	0;
0.5451	0.1451	0;
0.8588	0.4392	0.5765;
1	0.5098	0.6706;
0.9333	0.4745	0.6235;
0.8039	0.4078	0.5373;
0.5451	0.2784	0.3647;
0.8157	0.1255	0.5647;
1	0.2431	0.5882;
0.9333	0.2275	0.549;
0.8039	0.1961	0.4706;
0.5451	0.1333	0.3216;
0.698	0.1333	0.1333;
1	0.1882	0.1882;
0.9333	0.1725	0.1725;
0.8039	0.149	0.149;
0.5451	0.102	0.102;
1	0.7529	0.7961;
1	0.7098	0.7725;
0.9333	0.6627	0.7216;
0.8039	0.5686	0.6196;
0.5451	0.3882	0.4235;
0.9608	0.8	0.6902;
0.8196	0.5725	0.4588;
1	0	0;
1	0	0;
0.9333	0	0;
0.8039	0	0;
0.5451	0	0;
1	0.3882	0.2784;
1	0.3882	0.2784;
0.9333	0.3608	0.2588;
0.8039	0.3098	0.2235;
0.5451	0.2118	0.149;
0.5216	0.3882	0.3882;
0.5569	0.1373	0.1373;
0.9608	0.8	0.6902;
0.7373	0.5608	0.5608;
0.4353	0.2588	0.2588;
0.549	0.0902	0.0902;
1	0.1098	0.6824;
0.8902	0.3569	0.8471;
0.7529	0	0;
0.6	0.1961	0.8;
0.749	0.2431	1;
0.698	0.2275	0.9333;
0.6039	0.1961	0.8039;
0.4078	0.1333	0.5451;
0.5804	0	0.8275;
1	0.9412	0.9608;
1	0.9412	0.9608;
0.9333	0.8784	0.898;
0.8039	0.7569	0.7725;
0.5451	0.5137	0.5255;
0.7294	0.3333	0.8275;
0.8784	0.4	1;
0.8196	0.3725	0.9333;
0.7059	0.3216	0.8039;
0.4784	0.2157	0.5451;
0.5765	0.4392	0.8588;
0.5765	0.4392	0.8588;
0.6706	0.5098	1;
0.6	0.1961	0.8039;
0.6235	0.4745	0.9333;
0.5373	0.4078	0.8039;
0.3647	0.2784	0.5451;
0.902	0.902	0.9804;
1	0	1;
1	0	1;
1	0	1;
0.9333	0	0.9333;
0.8039	0	0.8039;
0.5451	0	0.5451;
0.6902	0.1882	0.3765;
1	0.2039	0.702;
0.9333	0.1882	0.6549;
0.8039	0.1608	0.5647;
0.5451	0.1098	0.3843;
0.8549	0.4392	0.8392;
0.8588	0.4392	0.8588;
1	0.5137	0.9804;
0.9333	0.4784	0.9137;
0.8039	0.4118	0.7882;
0.5451	0.2784	0.5373;
0.8667	0.6275	0.8667;
1	0.7333	1;
0.9333	0.6824	0.9333;
0.8039	0.5882	0.8039;
0.5451	0.4	0.5451;
0.6275	0.1255	0.9412;
0.502	0	0.502;
0.6078	0.1882	1;
0.5686	0.1725	0.9333;
0.4902	0.149	0.8039;
0.3333	0.102	0.5451;
0.8471	0.749	0.8471;
1	0.8824	1;
0.9333	0.8235	0.9333;
0.8039	0.7098	0.8039;
0.5451	0.4824	0.5451;
0.9333	0.5098	0.9333;
0.6235	0.3725	0.6235;
0.5294	0.1216	0.4706;
0.9608	0.8	0.6902;
0.502	0	0;
0.8588	0.4392	0.5765;
1	0.4314	0.7804;
0.9176	0.6784	0.9176;
0.8471	0.749	0.8471;
0.6784	0.9176	0.9176;
0.3098	0.1843	0.3098;
0.8	0.1961	0.6;
0.9804	0.9216	0.8431;
1	0.9373	0.8588;
0.9333	0.8745	0.8;
0.8039	0.7529	0.6902;
0.5451	0.5137	0.4706;
1	0.9804	0.9412;
0.9725	0.9725	1;
1	0.8706	0.6784;
1	0.8706	0.6784;
0.9333	0.8118	0.6314;
0.8039	0.702	0.5451;
0.5451	0.4745	0.3686;
0.9922	0.9608	0.902;
0.9608	0.9608	0.9608;
0.8627	0.8627	0.8627;
1	1	0.9412;
1	1	0.9412;
0.9333	0.9333	0.8784;
0.8039	0.8039	0.7569;
0.5451	0.5451	0.5137;
0.9804	0.9412	0.902;
1	0.9608	0.9333;
1	0.9608	0.9333;
0.9333	0.898	0.8706;
0.8039	0.7725	0.749;
0.5451	0.5255	0.5098;
1	0.9804	0.9804;
1	0.9804	0.9804;
0.9333	0.9137	0.9137;
0.8039	0.7882	0.7882;
0.5451	0.5373	0.5373;
0.9608	0.8706	0.702;
1	0.9059	0.7294;
0.9333	0.8471	0.6824;
0.8039	0.7294	0.5882;
0.5451	0.4941	0.4;
1	1	1;
0.851	0.851	0.9529;
0.8471	0.8471	0.749;
1	0.9216	0.8039;
0.7216	0.5255	0.0431;
1	0.7255	0.0588;
0.9333	0.6784	0.0549;
0.8039	0.5843	0.0471;
0.5451	0.3961	0.0314;
1	0.9804	0.8039;
1	0.9804	0.8039;
0.9333	0.9137	0.749;
0.8039	0.7882	0.6471;
0.5451	0.5373	0.4392;
0.9333	0.8667	0.5098;
1	0.9255	0.5451;
0.9333	0.8627	0.5098;
0.8039	0.7451	0.4392;
0.5451	0.5059	0.298;
0.9804	0.9804	0.8235;
1	1	0.8784;
1	1	0.8784;
0.9333	0.9333	0.8196;
0.8039	0.8039	0.7059;
0.5451	0.5451	0.4784;
0.9333	0.9098	0.6667;
1	0.9373	0.8353;
1	0.9725	0.8627;
1	0.9725	0.8627;
0.9333	0.9098	0.8039;
0.8039	0.7843	0.6941;
0.5451	0.5333	0.4706;
0.8549	0.6471	0.1255;
1	0.7569	0.1451;
0.9333	0.7059	0.1333;
0.8039	0.6078	0.1137;
0.5451	0.4118	0.0784;
1	0.8941	0.7098;
1	1	0;
1	1	0;
0.9333	0.9333	0;
0.8039	0.8039	0;
0.5451	0.5451	0;
1	0.8431	0;
1	0.8431	0;
0.9333	0.7882	0;
0.8039	0.6784	0;
0.5451	0.4588	0;
0.8588	0.8588	0.4392;
0.9176	0.9176	0.6824;
0.6	0.8	0.1961;
0.7216	0.451	0.2;
0.851	0.5294	0.098;
0.5216	0.3882	0.3882;
0.7098	0.651	0.2588;
0.549	0.4706	0.3255;
0.651	0.4902	0.2392;
0.851	0.851	0.098;
0.8118	0.7098	0.2314;
0.8	0.6	0;
0.8039	0.498	0.1961;
0.902	0.9098	0.9804;
0.7529	0.7529	0.7529;
0.3294	0.3294	0.3294;
0.7843  0.6353  0.7843;
0.8627  0.0784  0.2353;
0.1373	0.4196	0.5569	],ones(1,652),3);

colorNames = {'DimGrey',...
'Grey, Silver',...
'grey',...
'LightGray',...
'LightSlateGrey',...
'SlateGray',...
'SlateGray1',...
'SlateGray2',...
'SlateGray3',...
'SlateGray4',...
'black',...
'grey0',...
'grey1',...
'grey2',...
'grey3',...
'grey4',...
'grey5',...
'grey6',...
'grey7',...
'grey8',...
'grey9',...
'grey10',...
'grey11',...
'grey12',...
'grey13',...
'grey14',...
'grey15',...
'grey16',...
'grey17',...
'grey18',...
'grey19',...
'grey20',...
'grey21',...
'grey22',...
'grey23',...
'grey24',...
'grey25',...
'grey26',...
'grey27',...
'grey28',...
'grey29',...
'grey30',...
'grey31',...
'grey32',...
'grey33',...
'grey34',...
'grey35',...
'grey36',...
'grey37',...
'grey38',...
'grey39',...
'grey40',...
'grey41',...
'grey42',...
'grey43',...
'grey44',...
'grey45',...
'grey46',...
'grey47',...
'grey48',...
'grey49',...
'grey50',...
'grey51',...
'grey52',...
'grey53',...
'grey54',...
'grey55',...
'grey56',...
'grey57',...
'grey58',...
'grey59',...
'grey60',...
'grey61',...
'grey62',...
'grey63',...
'grey64',...
'grey65',...
'grey66',...
'grey67',...
'grey68',...
'grey69',...
'grey70',...
'grey71',...
'grey72',...
'grey73',...
'grey74',...
'grey75',...
'grey76',...
'grey77',...
'grey78',...
'grey79',...
'grey80',...
'grey81',...
'grey82',...
'grey83',...
'grey84',...
'grey85',...
'grey86',...
'grey87',...
'grey88',...
'grey89',...
'grey90',...
'grey91',...
'grey92',...
'grey93',...
'grey94',...
'grey95',...
'grey96',...
'grey97',...
'grey98',...
'grey99',...
'grey100, White',...
'Dark Slate Grey',...
'Dim Grey',...
'Light Grey',...
'Very Light Grey',...
'Free Speech Grey',...
'AliceBlue',...
'BlueViolet',...
'Cadet Blue',...
'CadetBlue',...
'CadetBlue0',...
'CadetBlue1',...
'CadetBlue2',...
'CadetBlue3',...
'CadetBlue4',...
'Corn Flower Blue',...
'CornflowerBlue',...
'DarkSlateBlue',...
'DarkTurquoise',...
'DeepSkyBlue',...
'DeepSkyBlue1',...
'DeepSkyBlue2',...
'DeepSkyBlue3',...
'DeepSkyBlue4',...
'DodgerBlue',...
'DodgerBlue1',...
'DodgerBlue2',...
'DodgerBlue3',...
'DodgerBlue4',...
'LightBlue',...
'LightBlue1',...
'LightBlue2',...
'LightBlue3',...
'LightBlue4',...
'LightCyan',...
'LightCyan1',...
'LightCyan2',...
'LightCyan3',...
'LightCyan4',...
'LightSkyBlue',...
'LightSkyBlue1',...
'LightSkyBlue2',...
'LightSkyBlue3',...
'LightSkyBlue4',...
'LightSlateBlue',...
'LightSteelBlue',...
'LightSteelBlue1',...
'LightSteelBlue2',...
'LightSteelBlue3',...
'LightSteelBlue4',...
'Aquamarine0',...
'MediumBlue',...
'MediumSlateBlue',...
'MediumTurquoise',...
'MidnightBlue',...
'NavyBlue',...
'PaleTurquoise',...
'PaleTurquoise1',...
'PaleTurquoise2',...
'PaleTurquoise3',...
'PaleTurquoise4',...
'PowderBlue',...
'RoyalBlue',...
'RoyalBlue1',...
'RoyalBlue2',...
'RoyalBlue3',...
'RoyalBlue4',...
'RoyalBlue5',...
'SkyBlue',...
'SkyBlue1',...
'SkyBlue2',...
'SkyBlue3',...
'SkyBlue4',...
'SlateBlue',...
'SlateBlue1',...
'SlateBlue2',...
'SlateBlue3',...
'SlateBlue4',...
'SteelBlue',...
'SteelBlue1',...
'SteelBlue2',...
'SteelBlue3',...
'SteelBlue4',...
'aquamarine',...
'aquamarine1',...
'aquamarine2',...
'aquamarine3, MediumAquamarine',...
'aquamarine4',...
'azure',...
'azure1',...
'azure2',...
'azure3',...
'azure4',...
'blue',...
'blue1',...
'blue2',...
'blue3',...
'blue4',...
'aqua',...
'cyan',...
'cyan1',...
'cyan2',...
'cyan3',...
'cyan4',...
'navy',...
'teal',...
'turquoise',...
'turquoise1',...
'turquoise2',...
'turquoise3',...
'turquoise4',...
'DarkSlateGray',...
'DarkSlateGray1',...
'DarkSlateGray2',...
'DarkSlateGray3',...
'DarkSlateGray4',...
'Dark Slate Blue',...
'Dark Turquoise',...
'Light Blue',...
'Medium Blue',...
'Medium Slate Blue',...
'Medium Turquoise',...
'Midnight Blue',...
'Navy Blue',...
'Neon Blue',...
'New Midnight Blue',...
'Rich Blue',...
'Sky Blue',...
'Slate Blue',...
'Summer Sky',...
'Iris Blue',...
'Free Speech Blue',...
'RosyBrown',...
'RosyBrown1',...
'RosyBrown2',...
'RosyBrown3',...
'RosyBrown4',...
'SaddleBrown',...
'SandyBrown',...
'beige',...
'brown',...
'brown',...
'brown1',...
'brown2',...
'brown3',...
'brown4',...
'dark brown',...
'burlywood',...
'burlywood1',...
'burlywood2',...
'burlywood3',...
'burlywood4',...
'baker''s chocolate',...
'chocolate',...
'chocolate1',...
'chocolate2',...
'chocolate3',...
'chocolate4',...
'peru',...
'tan',...
'tan1',...
'tan2',...
'tan3',...
'tan4',...
'Dark Tan',...
'Dark Wood',...
'Light Wood',...
'Medium Wood',...
'New Tan',...
'Semi-Sweet Chocolate',...
'Sienna0',...
'Tan0',...
'Very Dark Brown',...
'Dark Green',...
'DarkGreen',...
'dark green copper',...
'DarkKhaki',...
'DarkOliveGreen',...
'DarkOliveGreen1',...
'DarkOliveGreen2',...
'DarkOliveGreen3',...
'DarkOliveGreen4',...
'olive',...
'DarkSeaGreen',...
'DarkSeaGreen1',...
'DarkSeaGreen2',...
'DarkSeaGreen3',...
'DarkSeaGreen4',...
'ForestGreen',...
'GreenYellow',...
'LawnGreen',...
'LightSeaGreen',...
'LimeGreen',...
'MediumSeaGreen',...
'MediumSpringGreen',...
'MintCream',...
'OliveDrab',...
'OliveDrab1',...
'OliveDrab2',...
'OliveDrab3',...
'OliveDrab4',...
'PaleGreen',...
'PaleGreen1',...
'PaleGreen2',...
'PaleGreen3',...
'PaleGreen4',...
'SeaGreen',...
'SeaGreen1',...
'SeaGreen2',...
'SeaGreen3',...
'SpringGreen',...
'SpringGreen1',...
'SpringGreen2',...
'SpringGreen3',...
'SpringGreen4',...
'YellowGreen',...
'chartreuse',...
'chartreuse1',...
'chartreuse2',...
'chartreuse3',...
'chartreuse4',...
'green',...
'green0',...
'lime',...
'green1',...
'green2',...
'green3',...
'green4',...
'khaki',...
'khaki1',...
'khaki2',...
'khaki3',...
'khaki4',...
'Dark Olive Green',...
'Green Yellow',...
'Hunter Green',...
'Forest Green, Khaki, Medium Aquamarine',...
'Lime Green',...
'Medium Forest Green',...
'Medium Sea Green',...
'Medium Spring Green',...
'Pale Green',...
'Sea Green',...
'Spring Green',...
'Free Speech Green',...
'Free Speech Aquamarine',...
'DarkOrange',...
'DarkOrange1',...
'DarkOrange2',...
'DarkOrange3',...
'DarkOrange4',...
'DarkSalmon',...
'LightCoral',...
'LightSalmon',...
'LightSalmon1',...
'LightSalmon2',...
'LightSalmon3',...
'LightSalmon4',...
'PeachPuff',...
'PeachPuff1',...
'PeachPuff2',...
'PeachPuff3',...
'PeachPuff4',...
'bisque',...
'bisque1',...
'bisque2',...
'bisque3',...
'bisque4',...
'coral',...
'coral0',...
'coral1',...
'coral2',...
'coral3',...
'coral4',...
'honeydew',...
'honeydew1',...
'honeydew2',...
'honeydew3',...
'honeydew4',...
'orange0',...
'orange1',...
'orange2',...
'orange3',...
'orange4',...
'salmon',...
'salmon1',...
'salmon2',...
'salmon3',...
'salmon4',...
'sienna',...
'sienna1',...
'sienna2',...
'sienna3',...
'sienna4',...
'Mandarian Orange',...
'Orange',...
'Orange Red',...
'DeepPink',...
'DeepPink1',...
'DeepPink2',...
'DeepPink3',...
'DeepPink4',...
'HotPink',...
'HotPink1',...
'HotPink2',...
'HotPink3',...
'HotPink4',...
'IndianRed',...
'IndianRed1',...
'IndianRed2',...
'IndianRed3',...
'IndianRed4',...
'LightPink',...
'LightPink1',...
'LightPink2',...
'LightPink3',...
'LightPink4',...
'MediumVioletRed',...
'MistyRose',...
'MistyRose1',...
'MistyRose2',...
'MistyRose3',...
'MistyRose4',...
'OrangeRed',...
'OrangeRed1',...
'OrangeRed2',...
'OrangeRed3',...
'OrangeRed4',...
'PaleVioletRed',...
'PaleVioletRed1',...
'PaleVioletRed2',...
'PaleVioletRed3',...
'PaleVioletRed4',...
'VioletRed',...
'VioletRed1',...
'VioletRed2',...
'VioletRed3',...
'VioletRed4',...
'firebrick',...
'firebrick1',...
'firebrick2',...
'firebrick3',...
'firebrick4',...
'pink',...
'pink1',...
'pink2',...
'pink3',...
'pink4',...
'Flesh',...
'Feldspar',...
'red',...
'red1',...
'red2',...
'red3',...
'red4',...
'tomato',...
'tomato1',...
'tomato2',...
'tomato3',...
'tomato4',...
'Dusty Rose',...
'Firebrick0',...
'Indian Red',...
'Pink0',...
'Salmon0',...
'Scarlet',...
'Spicy Pink',...
'Free Speech Magenta',...
'Free Speech Red',...
'DarkOrchid',...
'DarkOrchid1',...
'DarkOrchid2',...
'DarkOrchid3',...
'DarkOrchid4',...
'DarkViolet',...
'LavenderBlush',...
'LavenderBlush1',...
'LavenderBlush2',...
'LavenderBlush3',...
'LavenderBlush4',...
'MediumOrchid',...
'MediumOrchid1',...
'MediumOrchid2',...
'MediumOrchid3',...
'MediumOrchid4',...
'MediumPurple',...
'Medium Orchid',...
'MediumPurple1',...
'Dark Orchid',...
'MediumPurple2',...
'MediumPurple3',...
'MediumPurple4',...
'lavender',...
'magenta',...
'fuchsia',...
'magenta1',...
'magenta2',...
'magenta3',...
'magenta4',...
'maroon',...
'maroon1',...
'maroon2',...
'maroon3',...
'maroon4',...
'orchid',...
'Orchid0',...
'orchid1',...
'orchid2',...
'orchid3',...
'orchid4',...
'plum',...
'plum1',...
'plum2',...
'plum3',...
'plum4',...
'purple',...
'purple0',...
'purple1',...
'purple2',...
'purple3',...
'purple4',...
'thistle',...
'thistle1',...
'thistle2',...
'thistle3',...
'thistle4',...
'violet',...
'violet blue',...
'Dark Purple',...
'Maroon0',...
'Maroon00',...
'Medium Violet Red',...
'Neon Pink',...
'Plum0',...
'Thistle',...
'Turquoise',...
'Violet0',...
'Violet Red',...
'AntiqueWhite',...
'AntiqueWhite1',...
'AntiqueWhite2',...
'AntiqueWhite3',...
'AntiqueWhite4',...
'FloralWhite',...
'GhostWhite',...
'NavajoWhite',...
'NavajoWhite1',...
'NavajoWhite2',...
'NavajoWhite3',...
'NavajoWhite4',...
'OldLace',...
'WhiteSmoke',...
'gainsboro',...
'ivory',...
'ivory1',...
'ivory2',...
'ivory3',...
'ivory4',...
'linen',...
'seashell',...
'seashell1',...
'seashell2',...
'seashell3',...
'seashell4',...
'snow',...
'snow1',...
'snow2',...
'snow3',...
'snow4',...
'wheat',...
'wheat1',...
'wheat2',...
'wheat3',...
'wheat4',...
'white',...
'Quartz',...
'Wheat0',...
'BlanchedAlmond',...
'DarkGoldenrod',...
'DarkGoldenrod1',...
'DarkGoldenrod2',...
'DarkGoldenrod3',...
'DarkGoldenrod4',...
'LemonChiffon',...
'LemonChiffon1',...
'LemonChiffon2',...
'LemonChiffon3',...
'LemonChiffon4',...
'LightGoldenrod',...
'LightGoldenrod1',...
'LightGoldenrod2',...
'LightGoldenrod3',...
'LightGoldenrod4',...
'LightGoldenrodYellow',...
'LightYellow',...
'LightYellow1',...
'LightYellow2',...
'LightYellow3',...
'LightYellow4',...
'PaleGoldenrod',...
'PapayaWhip',...
'cornsilk',...
'cornsilk1',...
'cornsilk2',...
'cornsilk3',...
'cornsilk4',...
'goldenrod',...
'goldenrod1',...
'goldenrod2',...
'goldenrod3',...
'goldenrod4',...
'moccasin',...
'yellow',...
'yellow1',...
'yellow2',...
'yellow3',...
'yellow4',...
'gold',...
'gold1',...
'gold2',...
'gold3',...
'gold4',...
'Goldenrod0',...
'Medium Goldenrod',...
'Yellow Green',...
'copper',...
'cool copper',...
'Green Copper',...
'brass',...
'bronze',...
'bronze2',...
'bright gold',...
'Old Gold',...
'CSS Gold',...
'gold0',...
'silver',...
'Silver Grey',...
'Light Steel Blue',...
'lilach',...
'crimson',...
'Steel Blue'};






